'scopeName': 'source.cfscript'
'name': 'cfscript'
'fileTypes': [
  'cfm'
  'cfml'
  'cfc'
]
'patterns': [
  {
    'include': '#cfscript-files'
  }
]
'repository':
  'cfscript-files':
    'name': 'source.cfscript'
    'patterns': [
      {
        'begin':'^\\s*(import)\\s'
        'end':';'
        'beginCaptures':
          '1':
            'name':'entity.tag.name.script'
        'patterns': [{'include': '#script-component-path'},{'include': '#script-component-name'}]
      }
      {
        'match': '^\\s*(?i:\\b(component|interface|import|savecontent|property|param|transaction|query|document|setting|loop|(cf[a-zA-Z]+)(?=\\s*\\())\\b)'
        'name': 'entity.tag.name.script'
      }
      {
        'match': '^\\s*(?i:((write)?dump|writeoutput|throw))\\('
        'captures':
            '1':
                'name': 'keyword.control.js entity.other.cfml.bif'
      }
      {
        'match': '.?var\\s'
        'name': 'storage.modifier.var'
      }
      {
        'match': '\\b((?i:variables|request|form|url|session|application|this|cookie))\\.'
        'captures':
          '1':
            'name': 'entity.other.scope-name'
      }
      {
        'begin':'\\s(extends)\\s*="?'
        'end':'\\s'
        'beginCaptures':
          '1':
            'name':'storage.modifier'
        'patterns': [{'include': '#script-component-path'},{'include': '#script-component-name'}]
      }
      {
        'begin':'\\s(new)\\s'
        'end':'\\('
        'beginCaptures':
          '1':
            'name':'keyword.operator.new'
        'patterns': [{'include': '#script-component-path'},{'include': '#script-component-ctor'}]
      }
      {
          'include': '#script-comparison-operators'
      }
      {
          'include': '#string-double-quoted'
      }
      {
          'include': '#string-single-quoted'
      }
      {
        'include': 'source.js'
      }
    ]
  'script-comparison-operators':
    'patterns': [
        {
            'match': '\\b((?i:IS|NOT|EQ|GT|LT|GTE|LTE|CONTAINS))\\b'
            'name': 'keyword.operator.cfml'
        }
    ]
  'script-component-path':
    'patterns': [
      {
        'match': '(\\w+\\.)+'
        'name': 'entity.name.package'
      }
    ]
  'script-component-ctor':
    'patterns': [
      {
        'match': '\\w+'
        'name': 'entity.name.type.component.constructor'
      }
    ]
  'script-component-name':
    'patterns': [
      {
        'match': '\\w+'
        'name': 'entity.name.type.component'
      }
    ]
  'embedded-cf':
    'begin': '(\\#)'
    'end': '(\\#)'
    'captures':
      '1':
        'name': 'source.embedded.punctuation.section'
    'name': 'source.embedded.cf'
    'patterns': [
      {
        'include': '#inline-function-stuff'
      }
      {
        'include': '#embedded-code'
      }
    ]
  'embedded-code':
    'patterns': [
      {
        'include': 'source.cfscript' #until cfscript is better.
      }
    ]
  'inline-function-stuff':
    'begin': '[a-zA-Z0-9_\\.]+\\('
    'contentName': 'support.function.parameters'
    'end': '\\)'
    'name': 'support.function'
    'patterns': [
      {
        'include': '#inline-function-stuff'
      }
      {
        'include': '#string-double-quoted'
      }
      {
        'include': '#string-single-quoted'
      }
    ]
  'string-double-quoted':
    'begin': '"'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.cfml'
    'end': '"'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.cfml'
    'name': 'string.quoted.double.cfml'
    'patterns': [
      {
        'include': '#embedded-cf'
      }
      {
        'include': '#entities'
      }
    ]
  'string-single-quoted':
    'begin': '\''
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.cfml'
    'end': '\''
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.cml'
    'name': 'string.quoted.single.cfml'
    'patterns': [
      {
        'include': '#embedded-cf'
      }
      {
        'include': '#entities'
      }
    ]
